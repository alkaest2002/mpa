(()=>{var j=computeScores=({testee:M,session:x,answers:N,specs:d})=>{let A=t=>Object.values(t).sort((s,r)=>s.itemId-r.itemId).map(s=>s.answerValue),f=(t,s)=>{let r=t.map(e=>e-1),n=s.filter((e,o)=>r.includes(o));return{scaleAnswers:n.filter(e=>e.length>0),scaleOmissions:n.filter(e=>e.length===0)||[]}},I=(t,s,r)=>{if(s.length===0)return{straightScore:null,straightOmissions:null,straightMin:null,straightMax:null};let{scaleAnswers:n,scaleOmissions:e}=f(s,r),o=n.flat(1/0),a=o.reduce((l,u)=>l+=Number(u),0),{0:c,[n.length-1]:i}=o.sort();return{straightScore:a,straightOmissions:e.length,straightMin:c,straightMax:i}},V=({likert:{max:t,min:s}},r,n)=>{if(r.length===0)return{reversedScore:null,reversedOmissions:null,reversedMin:null,reversedMax:null};let{scaleAnswers:e,scaleOmissions:o}=f(r,n),a=e.flat(1/0),c=Number(t+s),i=a.reduce((h,g)=>h+=c-Number(g)),{0:l,[e.length-1]:u}=a.sort();return{reversedScore:i,reversedOmissions:o.length,reversedMin:c-u,reversedMax:c-l}},b=(t,s,r,n,e)=>{let o=r.norms.getNorms,a=eval?.(`"use strict";${o};fn(${JSON.stringify({...n,...e})},"${t}")`),c=r.norms[a];return eval?.(`"use strict";${c};fn(${JSON.stringify(s)})`)},S={},v=A(N);for(let[t,{name:s,straightItems:r,reversedItems:n}]of Object.entries(d.scales)){let{straightScore:e,straightOmissions:o,straightMin:a,straightMax:c}=I(d,r,v),{reversedScore:i,reversedOmissions:l,reversedMin:u,reversedMax:h}=V(d,n,v),g=(o||0)+(l||0),w=(e||0)+(i||0),$=Number((w/(r.length+n.length-g)).toFixed(2)),y=[a,u].filter(m=>m||m===0).sort().at(0),p=[c,h].filter(m=>m||m===0).sort().at(-1),O={omissions:g,rawScore:w,meanScore:$,minScore:y,maxScore:p},R=b(t,O,d,M,x);S={...S,[t]:{scaleId:t,name:s,...O,standardScore:R}}}return S};})();
