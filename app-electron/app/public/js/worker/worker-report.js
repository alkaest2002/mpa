(()=>{var y=n=>{if(!n||n.length===0)return 0;let e=[...n].sort((r,t)=>r-t),o=Math.floor(e.length/2);return e.length%2!==0?e[o]:(e[o-1]+e[o])/2},S=onmessage=async({data:n})=>{try{importScripts(n.urls.urlScoringScript,n.urls.urlTemplatingScript);let{testee:e,session:o,questionnaire:{questionnaireId:r,answers:t},urls:{urlReportTemplate:u,urlQuestionnaireSpecs:m}}=n,i=Object.keys(t),p=i.map(s=>t[s].answerLatency),g=y(p);i.forEach(s=>{t[s].deltaAnswerLatency=t[s]?.answerLatency-g});let[h,c]=await Promise.all([fetch(u).then(s=>s.ok?s.text():Promise.reject("Failed to load template")),fetch(m).then(s=>s.ok?s.json():Promise.reject("Failed to load specs"))]),a=Object.keys(c?.scales||[]).length>0,l=a?computeScores({testee:e,session:o,answers:t,specs:c}):{},d=a?eval?.(`"use strict";${c.norms.getNormsBiblio};fn(${JSON.stringify({...e,...o})})`):{},f=generateReport({testee:e,session:o,answers:t,scores:l,normsBiblio:{ref:d},template:h});postMessage({questionnaireId:r,questionnaireScores:l,questionnaireAnswers:t,questionnaireReport:f})}catch(e){postMessage({error:e.message||"Unknown error occurred"})}};})();
