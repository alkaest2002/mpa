(()=>{var V=computeScores=({testee:g,session:w,answers:f,specs:l})=>{let h=o=>Object.values(o).sort((t,s)=>t.itemId-s.itemId).map(t=>t.answerValue.reduce((s,n)=>s+=n,0)),v=(o,t,s)=>{let n=t.map(r=>r-1),a=s.filter((r,c)=>n.includes(c)),i=a.filter(r=>r.answerValue=="")?.length||0;return{straightScore:a.filter(r=>r.answerValue!="").reduce((r,c)=>r+Number(c),0),straightOmissions:i}},N=({likert:{max:o,min:t}},s,n)=>{let a=o+t,i=s.map(e=>e-1),u=n.filter((e,d)=>i.includes(d)),r=u.filter(e=>e.answerValue=="")?.length||0;return{reversedScore:u.filter(e=>e.answerValue!="").map(e=>a-e).reduce((e,d)=>e+Number(d),0),reversedOmissions:r}},I=(o,t,s,n,a,i)=>{let u=n.norms.getNorms,r=eval?.(`"use strict";${u};fn(${JSON.stringify({...a,...i})},"${o}")`),c=n.norms[r];return eval?.(`"use strict";${c};fn(${JSON.stringify({rawScore:t,meanScore:s})})`)},m={},S=h(f);for(let[o,{name:t,straightItems:s,reversedItems:n}]of Object.entries(l.scales)){let{straightScore:a,straightOmissions:i}=v(l,s,S),{reversedScore:u,reversedOmissions:r}=N(l,n,S),c=i+r,e=a+u,d=Number((e/(s.length+n.length-c)).toFixed(2)),O=I(o,e,d,l,g,w);m={...m,[o]:{scaleId:o,name:t,rawScore:e,meanScore:d,standardScore:O,omissions:c}}}return m};})();
