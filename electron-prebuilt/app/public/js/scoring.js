(()=>{var O=computeScores=({testee:g,session:w,answers:f,specs:d})=>{let h=(t,n="answerValue")=>Object.values(t).sort(s=>s.order).map(s=>s[n]),v=(t,n,s)=>{let c=n.map(e=>e-1),a=s.filter((e,o)=>c.includes(o)),i=a.filter(e=>e.answerValue=="")?.length||0;return{straightScore:a.filter(e=>e.answerValue!="").reduce((e,o)=>e+Number(o),0),straightOmissions:i}},p=({likert:{max:t,min:n}},s,c)=>{let a=t+n,i=s.map(r=>r-1),u=c.filter((r,l)=>i.includes(l)),e=u.filter(r=>r.answerValue=="")?.length||0;return{reversedScore:u.filter(r=>r.answerValue!="").map(r=>a-r).reduce((r,l)=>r+Number(l),0),reversedOmissions:e}},V=(t,n,s,c,a)=>{let i=s.norms.getNorms,u=eval?.(`"use strict";${i};fn(${JSON.stringify({...c,...a})},"${t}")`),e=s.norms[u],o=eval?.(`"use strict";${e};fn(${n})`);return Math.round(o,0)},m={},S=h(f,"answerValue");for(let[t,{name:n,straightItems:s,reversedItems:c}]of Object.entries(d.scales)){let{straightScore:a,straightOmissions:i}=v(d,s,S),{reversedScore:u,reversedOmissions:e}=p(d,c,S),o=i+e,r=a+u,l=r/(s.length+c.length-o),N=V(t,r,d,g,w);m={...m,[t]:{scaleId:t,name:n,rawScore:r,meanScore:l,standardScore:N,omissions:o}}}return m};})();
