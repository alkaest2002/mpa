{
  "name": "Core OM",
  "scales": {
    "wbg": {
      "code": "W",
      "name": "benessere"
    },
    "pro": {
      "code": "P",
      "name": "problemi"
    },
    "fun": {
      "code": "F"
    },
    "rsk": {
      "code": "R",
      "name": "comportamenti a rischio"
    },
    "to1": {
      "code": "TOT-R",
      "name": "indice di distress tranne comp. a rischio"
    },
    "to2": {
      "code": "TOT",
      "name": "indice di distress generale"
    }
  },
  "norms": {
    "getNormsBiblio": "const fn = () => 'Palmieri G, Evans C, Hansen V, Brancaleoni G, Ferrari S, Porcelli P, Reitano F, Rigatelli M. Validation of the Italian version of the Clinical Outcomes in Routine Evaluation Outcome Measure (CORE-OM). Clin Psychol Psychother. 2009 Sep-Oct;16(5):444-9. doi: 10.1002/cpp.646. PMID: 19701881.'",
    "getNorms": "const fn = ({ bio: { gender }, settingId, languageId }, scaleId) => `${gender}.${scaleId}`",
    "m.wbg": "const fn = ({ meanScore }) => Math.max(0, Math.min(100, 50+10*((meanScore-0.98)/0.69))).toFixed(0)",
    "m.to1": "const fn = ({ meanScore }) => Math.max(0, Math.min(100, 50+10*((meanScore-0.95)/0.55))).toFixed(0)",
    "m.fun": "const fn = ({ meanScore }) => Math.max(0, Math.min(100, 50+10*((meanScore-1.04)/0.56))).toFixed(0)",
    "m.rsk": "const fn = ({ meanScore }) => Math.max(0, Math.min(100, 50+10*((meanScore-0.16)/0.42))).toFixed(0)",
    "m.pro": "const fn = ({ meanScore }) => Math.max(0, Math.min(100, 50+10*((meanScore-0.84)/0.60))).toFixed(0)",
    "m.to2": "const fn = ({ meanScore }) => Math.max(0, Math.min(100, 50+10*((meanScore-0.81)/0.50))).toFixed(0)",
    "f.wbg": "const fn = ({ meanScore }) => Math.max(0, Math.min(100, 50+10*((meanScore-1.26)/0.85))).toFixed(0)",
    "f.pro": "const fn = ({ meanScore }) => Math.max(0, Math.min(100, 50+10*((meanScore-0.99)/0.65))).toFixed(0)",
    "f.fun": "const fn = ({ meanScore }) => Math.max(0, Math.min(100, 50+10*((meanScore-1.01)/0.51))).toFixed(0)",
    "f.rsk": "const fn = ({ meanScore }) => Math.max(0, Math.min(100, 50+10*((meanScore-0.11)/0.33))).toFixed(0)",
    "f.to1": "const fn = ({ meanScore }) => Math.max(0, Math.min(100, 50+10*((meanScore-1.03)/0.56))).toFixed(0)",
    "f.to2": "const fn = ({ meanScore }) => Math.max(0, Math.min(100, 50+10*((meanScore-0.87)/0.49))).toFixed(0)"
  }
}
